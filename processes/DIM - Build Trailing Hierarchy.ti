#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****


#===========================
# Set Up Trailing Period Hierarchy
#===========================

strDim = 'bpmPeriod';
strCY = pYear;
strAttr = 'MonthNum2Digit';
strAttrDim = '}ElementAttributes_' | strDim;
strAttrCube = '}ElementAttributes_' | strDim;

strTrailingRoot = 'Total Years Trailing';
IF ( DIMIX ( strDim, strTrailingRoot ) = 0 );
     DIMENSIONELEMENTINSERT ( strDim, '', strTrailingRoot, 'C' );
ENDIF;

strTRLYearParent = strCY | ' TRL';
IF ( DIMIX ( strDim, strTRLYearParent ) = 0 );
     DIMENSIONELEMENTINSERT ( strDim, '', strTRLYearParent , 'C' );
ENDIF;
DIMENSIONELEMENTCOMPONENTADD(strDim,  strTrailingRoot , strTRLYearParent, 1 );


#========================
# Loop 1 through 12
numOuterCtr = 1;
numOuterCtrMax = 12;
WHILE ( numOuterCtr <= numOuterCtrMax) ;

     strTestNum =  '0' | NUMBERTOSTRING(numOuterCtr)  ;

     IF( LONG(strTestNum) = 2 );
         strTrlNum = strTestNum;
     ELSE ;
         strTrlNum = SUBST(strTestNum,2,2);
     ENDIF;

     strYearParent = strCY | ' TRL' | strTrlNum;
     IF ( DIMIX ( strDim, strYearParent ) = 0 );
                DIMENSIONELEMENTINSERT ( strDim, '', strYearParent , 'C' );
     ENDIF;


    DIMENSIONELEMENTCOMPONENTADD(strDim,  strTRLYearParent, strYearParent, 1 );

#====================================================

#Get base level children of pYear without OPB
numInnerCtr = 1;
numInnerCtrMax = DIMSIZ (strDim);

WHILE (numInnerCtr <= numInnerCtrMax);
    strMonth = DIMNM (strDim, numInnerCtr);

    IF ( ELLEV( strDim, strMonth ) = 0 & ELISANC(strDim, strCY, strMonth) = 1
           & SCAN('OPB', strMonth) = 0   );

       strMonthNum = SUBST( CELLGETS ( strAttrCube, strMonth, strAttr),1,2);

       strMthParent = strMonth | ' TRL' | strTrlNum  ;

       IF ( DIMIX ( strDim, strMthParent ) = 0 );
               DIMENSIONELEMENTINSERT ( strDim, '', strMthParent , 'C' );
       ENDIF;
       DIMENSIONELEMENTCOMPONENTADD(strDim,  strYearParent, strMthParent, 1 );


#====================================================

strPreviousMth = CELLGETS ( strAttrCube, strMonth, 'PrevPeriod' );

#ASCIIOUTPUT( 'test.txt', strAttrCube, strMonth, 'PrevPeriod' );

IF( DIMIX( strDim, strPreviousMth) <> 0 );
   DIMENSIONELEMENTCOMPONENTADD(strDim,  strMthParent, strPreviousMth, 1 );

   numMthCtr = 2;
   numMthCtrMax = numOuterCtr;

   WHILE (numMthCtr <= numMthCtrMax);

        IF(DIMIX( strDim, strPreviousMth) <> 0 );
             strPreviousMth = CELLGETS ( strAttrCube, strPreviousMth, 'PrevPeriod');
        ENDIF;

        IF( DIMIX( strDim, strPreviousMth) <> 0 );
             DIMENSIONELEMENTCOMPONENTADD(strDim,  strMthParent, strPreviousMth, 1 );
        ENDIF;

        IF(  strPreviousMth @= '' );
             numMthCtr = numMthCtrMax ;
        ENDIF;

   numMthCtr = numMthCtr+1;
   END;

ENDIF;


#====================================================

     ENDIF;
numInnerCtr = numInnerCtr+1;
END;

#=====Outer Loop =======
numOuterCtr = numOuterCtr +1;
END;



#===========================
# Set Up Historical Period Hierarchy
#===========================

strDim = 'bpmPeriod';
strCY = pYear;
strAttr = 'MonthNum2Digit';
strAttrDim = '}ElementAttributes_' | strDim;
strAttrCube = '}ElementAttributes_' | strDim;

strHistoryRoot = 'Total Years History';
IF ( DIMIX ( strDim, strHistoryRoot  ) = 0 );
     DIMENSIONELEMENTINSERT ( strDim, '', strHistoryRoot , 'C' );
ENDIF;

#Insert Year Parent
strHTDYearParent = strCY | ' HTD';
IF ( DIMIX ( strDim, strHtdYearParent ) = 0 );
     DIMENSIONELEMENTINSERT ( strDim, '', strHtdYearParent , 'C' );
ENDIF;
DIMENSIONELEMENTCOMPONENTADD(strDim,  strHistoryRoot , strHTDYearParent , 1 );


#Get base level children of pYear without OPB
numInnerCtr = 1;
numInnerCtrMax = DIMSIZ (strDim);

WHILE (numInnerCtr <= numInnerCtrMax);
    strMonth = DIMNM (strDim, numInnerCtr);

    IF ( ELLEV( strDim, strMonth ) = 0 & ELISANC(strDim, strCY, strMonth) = 1
           & SCAN('OPB', strMonth) = 0   );

       strHtdMthParent = strMonth | ' HTD' ;

       IF ( DIMIX ( strDim, strHtdMthParent ) = 0 );
               DIMENSIONELEMENTINSERT ( strDim, '', strHtdMthParent , 'C' );
       ENDIF;

       DIMENSIONELEMENTCOMPONENTADD(strDim,  strHTDYearParent , strHtdMthParent , 1 );
       #DIMENSIONELEMENTCOMPONENTADD(strDim,  strHtdMthParent, strMonth | ' YTD', 1 );

       #Loop Each Year for Dec YTD
       numYearCtr = 1;
       numYearCtrMax = ELCOMPN( strDim, 'Total Years' );

       WHILE (numYearCtr <= numYearCtrMax);
              strYear = ELCOMP (strDim, 'Total Years', numYearCtr);
              numYear = STRINGTONUMBER(strYear);
              numPriorYr = STRINGTONUMBER( SUBST(strMonth, 5, 4))-1 ;

              IF( numYear <= numPriorYr & DIMIX(strDim, 'Dec '| NUMBERTOSTRING(numYear)| ' YTD' ) <>0  );
                   strPriorYtd = 'Dec '| NUMBERTOSTRING(numYear)| ' YTD';
                   DIMENSIONELEMENTCOMPONENTADD(strDim,  strHtdMthParent, strPriorYtd, 1 );
               ENDIF;

       numYearCtr = numYearCtr +1;
       END;

     DIMENSIONELEMENTCOMPONENTADD(strDim,  strHtdMthParent, strMonth | ' YTD', 1 );

     ENDIF;
numInnerCtr = numInnerCtr+1;
END;





















#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****


strDim = 'bpmPeriod';

#Write One Digit Aliases to Elemnts
numAliasCtr = 1;
numAliasCtrMax = DIMSIZ (strDim);

WHILE (numAliasCtr <= numAliasCtrMax);
    strPeriod = DIMNM (strDim, numAliasCtr);

    IF ( ELLEV( strDim, strPeriod ) <> 0 & ELISANC(strDim, strCY|' TRL', strPeriod) = 1 );

          numSearch = 0;
          numSearch = SCAN( 'TRL0' , strPeriod );
          IF( numSearch>0 );
                strPdAlias = SUBST(strPeriod, 1, numSearch + 2) | SUBST(strPeriod, numSearch + 4,1) ;
              IF( strPdAlias @<> '' );
                  ATTRPUTS( strPdAlias, strDim, strPeriod , 'TrlMonthNum');
              ENDIF;

          ENDIF;
    ENDIF;

numAliasCtr = numAliasCtr +1;
END;


#####====> Create Defualt Subset if it doesn't already exist.
strSubName =  'Default';

IF( SUBSETEXISTS( strDim, strSubName ) = 0 );
     SUBSETCREATE( strDim, strSubName );
ENDIF;

IF( SUBSETEXISTS( strDim, strSubName ) = 0 );
     SUBSETELEMENTINSERT( strDim, strSubName, strTrailingRoot, 0 );
ENDIF;

IF( SUBSETEXISTS( strDim, strSubName ) = 0 );
     SUBSETELEMENTINSERT( strDim, strSubName, strHistoryRoot, 0 );
ENDIF;


#endregion