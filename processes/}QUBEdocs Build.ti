#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

#LASTCHANGE Modified this process so that definitions can be set for control objects.
#LASTCHANGE Modified this process so that it also provides for definitions to be set for users and groups
#LASTCHANGE Modified this process so that it also documents users and groups
#LASTCHANGE Resolved issue with documentation of elements being set for QUBEdocs Definitions dimenion.
#GENERALCOMMENT This process builds the QUBEdocs definitions dimension so that documentation fields can be added against these objects.
#DATASOURCECOMMENT Not Applicable
#PROLOGCOMMENT Adds the list of cubes dimensions, processes, chores, attributes and elements to the QUBEdocs definitions dimension 
#METADATACOMMENT Not Applicable
#DATACOMMENT Not Applicable
#EPILOGCOMMENT Adds attribute values to the QUBEdocs defintions dimension & populates picklist & dimension calculation details (where applicable)

sCube = 'QUBEdocs Definitions';
sQUBEdocsDim = 'QUBEdocs Definition';

#DimensionDeleteAllElements(sQUBEdocsDim);
sParent ='All Definitions';
sModelEl = 'Entire Model';
sSettingsCube = '}ElementAttributes_QUBEdocs Setup Item';
sSetting = 'Control Objects in Defintions Cube';
IF(CELLGETS(sSettingsCube,sSetting,'Enable') @= 'YES');
 nAddControlObjects =1;
ENDIF;

EXECUTEPROCESS('}QUBEdocs_DisconnectConsolidations','pDimName',sQUBEdocsDim,'pConsolidation','All Definitions');

###########################
#ADD IN BASE CONSOLIDATIONS
###########################
DIMENSIONELEMENTINSERT(sQUBEdocsDim, '', 'All Definitions','C');   
DIMENSIONELEMENTINSERT(sQUBEdocsDim, '', 'All Cubes','N'); DimensionElementComponentAdd(sQUBEdocsDim, sParent,'All Cubes', 1);
DIMENSIONELEMENTINSERT(sQUBEdocsDim, '', 'All Dimensions','C'); DimensionElementComponentAdd(sQUBEdocsDim, sParent,'All Dimensions', 1);
DIMENSIONELEMENTINSERT(sQUBEdocsDim, '', 'All Processes','C'); DimensionElementComponentAdd(sQUBEdocsDim, sParent,'All Processes', 1);
DIMENSIONELEMENTINSERT(sQUBEdocsDim, '', 'All Chores','C'); DimensionElementComponentAdd(sQUBEdocsDim, sParent,'All Chores', 1);
DIMENSIONELEMENTINSERT(sQUBEdocsDim, '', 'All Folders','C'); DimensionElementComponentAdd(sQUBEdocsDim, sParent,'All Folders', 1);
DIMENSIONELEMENTINSERT(sQUBEdocsDim, '', 'All Other Documentation','C'); DimensionElementComponentAdd(sQUBEdocsDim, sParent,'All Other Documentation', 1);
DIMENSIONELEMENTINSERT(sQUBEdocsDim, '', 'All Groups','C'); DimensionElementComponentAdd(sQUBEdocsDim, sParent,'All Groups', 1);
DIMENSIONELEMENTINSERT(sQUBEdocsDim, '', 'All Users','C'); DimensionElementComponentAdd(sQUBEdocsDim, sParent,'All Users', 1);


###########################
#ADD CUBES
###########################
sDim = '}Cubes'; sParent ='All Cubes';
i=1;
WHILE(i<=DIMSIZ(sDim));
 sElement = DIMNM(sDim,i);
 sElementUID = 'CUB:' | sElement;
 IF(SUBST(sElement,1,1) @<> '}' % nAddControlObjects=1);
  DIMENSIONELEMENTINSERT(sQUBEdocsDim, '',   sElementUID,'C');
  DIMENSIONELEMENTCOMPONENTADD(sQUBEdocsDim, sParent, sElementUID, 1);
 ENDIF;
 i=i+1;
END;

###########################
#ADD DIMENSIONS
###########################

sDim = '}Dimensions'; sParent ='All Dimensions';

i=1;
WHILE(i<=DIMSIZ(sDim));
 sElement = DIMNM(sDim,i);
 sElementUID = 'DIM:' | sElement;
 IF(SUBST(sElement,1,1) @<> '}' % nAddControlObjects=1);

 nNewElement = 0;
 IF(DIMIX(sQUBEdocsDim,sElementUID) = 0);
  nNewElement = 1;
 ENDIF;

 DIMENSIONELEMENTINSERT(sQUBEdocsDim, '', sElementUID,'C');
 DimensionElementComponentAdd(sQUBEdocsDim, sParent,sElementUID, 1);

########################################
#ADD DIMENSION ELEMENTS IF FLAG HAS BEEN SET
########################################

  #Check if a dim is in the Definitions cube

  IF(nNewElement = 0);

    #Check to see if TM1 10.x attributes exist
    nCalc = DIMIX('}ElementAttributes_' | sElement,'calculation');
    nCCalc = DIMIX('}ElementAttributes_' | sElement,'crossdimcalc');
    nPicklist = DIMIX('}ElementAttributes_' | sElement,'picklist');


    sShowDocumented = CellGetS(sCube,sModelEl,sElementUID,'#DocumentElements');
    sShowUndocumented = CellGetS(sCube,sModelEl,sElementUID,'#ShowUndocumentedElements');
    sDocCalcs = ATTRS('QUBEdocs Setup Item','Dim Calcs and Picklists','Enable');


  IF((sShowDocumented @<>'' % sShowUndocumented @<> '' % ((nCalc+nCCalc+nPicklist) <>0) & sDocCalcs @= 'YES') & sElement @<> 'QubeDocs Definition');

  j=1;
       WHILE(j<=DIMSIZ(sElement));

          sElementUIDELS = 'DIM-ELEMENTS:' | sElement;
          sElementUIDEL = 'DIM-ELEMENT:' | sElement;
          sElementj = sElementUIDEL | '>' | DIMNM(sElement,j);

#Add elements that have dimension calculations
 IF(nCalc <> 0 & sDocCalcs @= 'YES');
  sValue = CELLGETS('}ElementAttributes_' | sElement,DIMNM(sElement,j),'calculation');
  IF(sValue @<>'');
          DIMENSIONELEMENTINSERT(sQUBEdocsDim, '', sElementUIDELS,'C');
          DIMENSIONELEMENTCOMPONENTADD(sQUBEdocsDim, sElementUID,sElementUIDELS, 1);
          DIMENSIONELEMENTINSERT(sQUBEdocsDim, '', sElementj,'N');
          DIMENSIONELEMENTCOMPONENTADD(sQUBEdocsDim, sElementUIDELS,sElementj, 1);
          sQDMeasure = '#DIMCALC';
  ENDIF;
 ENDIF;

#Add elements that have dimension calculations on consolidations
 IF(nCCalc <> 0 & sDocCalcs @= 'YES');
  sValue = CELLGETS('}ElementAttributes_' | sElement,DIMNM(sElement,j),'crossdimcalc');
  IF(sValue @<>'');
          DIMENSIONELEMENTINSERT(sQUBEdocsDim, '', sElementUIDELS,'C');
          DIMENSIONELEMENTCOMPONENTADD(sQUBEdocsDim, sElementUID,sElementUIDELS, 1);
          DIMENSIONELEMENTINSERT(sQUBEdocsDim, '', sElementj,'N');
          DIMENSIONELEMENTCOMPONENTADD(sQUBEdocsDim, sElementUIDELS,sElementj, 1);
   ENDIF;
 ENDIF;

#Add elements that have picklists
 IF(nPicklist <> 0 & sDocCalcs @= 'YES');
  sValue = CELLGETS('}ElementAttributes_' | sElement,DIMNM(sElement,j),'picklist');
  IF(sValue @<>'');
          DIMENSIONELEMENTINSERT(sQUBEdocsDim, '', sElementUIDELS,'C');
          DIMENSIONELEMENTCOMPONENTADD(sQUBEdocsDim, sElementUID,sElementUIDELS, 1);
          DIMENSIONELEMENTINSERT(sQUBEdocsDim, '', sElementj,'N');
          DIMENSIONELEMENTCOMPONENTADD(sQUBEdocsDim, sElementUIDELS,sElementj, 1);
          sQDMeasure = '#PICKLIST';
   ENDIF;
 ENDIF;

#Add in Elements that have been flagged for inclusion 

 IF(sShowDocumented @='YES' % sShowUndocumented @='YES');
          DIMENSIONELEMENTINSERT(sQUBEdocsDim, '', sElementUIDELS,'C');
          DIMENSIONELEMENTCOMPONENTADD(sQUBEdocsDim, sElementUID,sElementUIDELS, 1);
          DIMENSIONELEMENTINSERT(sQUBEdocsDim, '', sElementj,'N');
          DIMENSIONELEMENTCOMPONENTADD(sQUBEdocsDim, sElementUIDELS,sElementj, 1);
    ENDIF;
     
   j=j+1;
       END;
    ENDIF;
   ENDIF;


    k=1;

###########################
#ADD DIMENSION ATTRIBUTES
###########################

     WHILE(k<=DIMSIZ('}ElementAttributes_' | sElement));
        sElementUIDATS = 'DIM-ATTRIBUTES:' | sElement;
        sElementUIDAT = 'DIM-ATTRIBUTE:' | sElement;
        sElementk = sElementUIDAT | '>' | DIMNM('}ElementAttributes_' | sElement,k);
        DIMENSIONELEMENTINSERT(sQUBEdocsDim, '', sElementUIDATS,'C');
        DIMENSIONELEMENTCOMPONENTADD(sQUBEdocsDim, sElementUID,sElementUIDATS, 1);
        DIMENSIONELEMENTINSERT(sQUBEdocsDim, '', sElementk,'N');
        DIMENSIONELEMENTCOMPONENTADD(sQUBEdocsDim, sElementUIDATS,sElementk, 1);

      k=k+1;
     END;

 ENDIF;
 i=i+1;
END;

###########################
#ADD PROCESSES
###########################

sDim = '}Processes'; sParent ='All Processes';
i=1;
WHILE(i<=DIMSIZ(sDim));
 sElement = DIMNM(sDim,i);
 sElementUID = 'PRO:' | sElement;
 IF(SUBST(sElement,1,1) @<> '}' % nAddControlObjects=1);
  DIMENSIONELEMENTINSERT(sQUBEdocsDim, '', sElementUID,'N');
  DIMENSIONELEMENTCOMPONENTADD(sQUBEdocsDim, sParent,sElementUID, 1);
 ENDIF;
 i=i+1;
END;

###########################
#ADD CHORES
###########################

sDim = '}Chores'; sParent ='All Chores';
i=1;
WHILE(i<=DIMSIZ(sDim));
 sElement = DIMNM(sDim,i);
 sElementUID = 'CHO:' | sElement;
 IF(SUBST(sElement,1,1) @<> '}' % nAddControlObjects=1);
  DIMENSIONELEMENTINSERT(sQUBEdocsDim, '', sElementUID,'N');
  DIMENSIONELEMENTCOMPONENTADD(sQUBEdocsDim, sParent,sElementUID, 1);
 ENDIF;
 i=i+1;
END;

###########################
#ADD OTHER DOCS
###########################
#DOCUMENT PLACEHOLDERS
sSetting ='Max No of Documents';
sMaxNoOfDocuments = CELLGETS(sSettingsCube,sSetting,'Enable');

IF(sMaxNoOfDocuments @<> '');

i=1;
nMaxNoOfDocuments = NUMBR(sMaxNoOfDocuments);
sParent = 'All Other Documentation';


WHILE(i<=nMaxNoOfDocuments);
  sPrefix = IF (LONG(NumberToString(i)) = 1,'00','0');
  sElementUID = 'Document ' | sPrefix | NumberToString(i);
  DIMENSIONELEMENTINSERT(sQUBEdocsDim, '', sElementUID,'N');
  DIMENSIONELEMENTCOMPONENTADD(sQUBEdocsDim, sParent,sElementUID, 1);
 i=i+1;
END;
ENDIF;

#LEGACY DOCUMENTS
sDim = 'QUBEdocs Other Docs'; sParent ='All Other Documentation';
i=1;
WHILE(i<=DIMSIZ(sDim));
sElement = DIMNM(sDim,i);
 sElementUID = 'OTH:' | sElement;
 IF(SUBST(sElement,1,1) @<> '}');
  DIMENSIONELEMENTINSERT(sQUBEdocsDim, '', sElementUID,'N');
  DIMENSIONELEMENTCOMPONENTADD(sQUBEdocsDim, sParent,sElementUID, 1);
 ENDIF;
 i=i+1;
END;



###########################
#ADD GROUPS
###########################

sDim = '}Groups'; sParent ='All Groups'; sAttr = '}TM1_DefaultDisplayValue';
i=1;
WHILE(i<=DIMSIZ(sDim));
sElement = DIMNM(sDim,i);

IF(DIMIX('}ElementAttributes_' | sDim,sAttr) <>0);
 sElementDV = ATTRS(sDim,sElement,sAttr);
 sElement = IF(sElementDV @<> '',sElementDV,sElement);
ENDIF;

 sElementUID = 'GRP:' | sElement;
# IF(SUBST(sElement,1,1) @<> '}');
  DIMENSIONELEMENTINSERT(sQUBEdocsDim, '', sElementUID,'N');
  DIMENSIONELEMENTCOMPONENTADD(sQUBEdocsDim, sParent,sElementUID, 1);
# ENDIF;
 i=i+1;
END;

###########################
#ADD USERS
###########################

sDim = '}Clients'; sParent ='All Users'; sAttr = '}TM1_DefaultDisplayValue';
i=1;
WHILE(i<=DIMSIZ(sDim));
sElement = DIMNM(sDim,i);

IF(DIMIX('}ElementAttributes_' | sDim,sAttr) <>0);
 sElementDV = ATTRS(sDim,sElement,sAttr);
 sElement = IF(sElementDV @<> '',sElementDV,sElement);
ENDIF;

 sElementUID = 'USR:' | sElement;
# IF(SUBST(sElement,1,1) @<> '}');
  DIMENSIONELEMENTINSERT(sQUBEdocsDim, '', sElementUID,'N');
  DIMENSIONELEMENTCOMPONENTADD(sQUBEdocsDim, sParent,sElementUID, 1);
# ENDIF;
 i=i+1;
END;

DimensionSortOrder ( sQUBEdocsDim, 'ByName', 'Ascending', 'ByHierarchy', '' );


#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****


sDim = '}Cubes'; sParent ='All Cubes';

ATTRPUTS('Model',sQUBEDocsDim,'All Definitions','Type');

i=1;
WHILE(i<=DIMSIZ(sDim));
 sElement = DIMNM(sDim,i);
 sElementUID = 'CUB:' | sElement;
 IF(SUBST(sElement,1,1) @<> '}');
  ATTRPUTS('Cube',sQUBEDocsDim,sElementUID,'Type');
  ATTRPUTS(sElement,sQUBEDocsDim,sElementUID,'Object');
 ENDIF;
 i=i+1;
END;

sDim = '}Dimensions'; sParent ='All Dimensions';

i=1;
WHILE(i<=DIMSIZ(sDim));
sElement = DIMNM(sDim,i);
 sElementUID = 'DIM:' | sElement;
 IF(SUBST(sElement,1,1) @<> '}' & DIMIX(sQUBEdocsDim,sElementUID) <>0);
  ATTRPUTS('Dimension',sQUBEDocsDim,sElementUID,'Type');
  ATTRPUTS(sElement,sQUBEDocsDim,sElementUID,'Object');
     j=1;

    #Check to see if TM1 10.x attributes exist
    nCalc = DIMIX('}ElementAttributes_' | sElement,'calculation');
    nCCalc = DIMIX('}ElementAttributes_' | sElement,'crossdimcalc');
    nPicklist = DIMIX('}ElementAttributes_' | sElement,'picklist');
    sDocCalcs = ATTRS('QUBEdocs Setup Item','Dim Calcs and Picklists','Enable');

  IF(UPPER(CellGetS(sCube,sModelEl,sElementUID,'#DocumentElements'))@<>'' % (( nCalc+nCCalc+nPicklist<>0) & sDocCalcs @= 'YES') & sElement @<> 'QubeDocs Definition');
     WHILE(j<=DIMSIZ(sElement));
       sElementUIDELS = 'DIM-ELEMENTS:' | sElement;
       sElementUIDEL = 'DIM-ELEMENT:' | sElement;
       sElementj = sElementUIDEL | '>' | DIMNM(sElement,j);
 IF(DIMIX(sQUBEdocsDim,sElementj) <> 0);
 IF(nCalc <> 0 & sDocCalcs @= 'YES');
  sValue = CELLGETS('}ElementAttributes_' | sElement,DIMNM(sElement,j),'calculation');
  IF(sValue @<>'');
          sQDMeasure = '#DIMCALC';
          CELLPUTS(sValue,'QUBEdocs Definitions','Entire Model',sElementj,sQDMeasure);
  ENDIF;
 ENDIF;
 IF(nCCalc <> 0 & sDocCalcs @= 'YES');
  sValue = CELLGETS('}ElementAttributes_' | sElement,DIMNM(sElement,j),'crossdimcalc');
  IF(sValue @<>'');
          sQDMeasure = '#DIMCCALC';
          CELLPUTS(sValue,'QUBEdocs Definitions','Entire Model',sElementj,sQDMeasure);
   ENDIF;
 ENDIF;
 IF(nPicklist <> 0 & sDocCalcs @= 'YES');
  sValue = CELLGETS('}ElementAttributes_' | sElement,DIMNM(sElement,j),'picklist');
  IF(sValue @<>'');
          sQDMeasure = '#PICKLIST';
          CELLPUTS(sValue,'QUBEdocs Definitions','Entire Model',sElementj,sQDMeasure);
   ENDIF;
 ENDIF;
# IF(UPPER(CellGetS(sCube,sModelEl,sElementUID,'#DocumentElements'))@<>'');
       ATTRPUTS('Element',sQUBEDocsDim,sElementj,'Type');
       ATTRPUTS(sElement,sQUBEDocsDim,sElementj,'Object');
       ATTRPUTS(DIMNM(sElement,j),sQUBEDocsDim,sElementj,'Element');
#  ENDIF;
ENDIF;
      j=j+1;
     END;
    ENDIF;

    k=1;

     WHILE(k<=DIMSIZ('}ElementAttributes_' | sElement));
        sElementUIDATS = 'DIM-ATTRIBUTES:' | sElement;
        sElementUIDAT = 'DIM-ATTRIBUTE:' | sElement;
        sElementk = sElementUIDAT | '>' | DIMNM('}ElementAttributes_' | sElement,k);
        ATTRPUTS('Attribute',sQUBEDocsDim,sElementk,'Type');
        ATTRPUTS(sElement,sQUBEDocsDim,sElementk,'Object');
        ATTRPUTS(DIMNM('}ElementAttributes_' | sElement,k),sQUBEDocsDim,sElementk,'Element');
      k=k+1;
     END;

 ENDIF;
 i=i+1;
END;

sDim = '}Processes'; sParent ='All Processes';
i=1;
WHILE(i<=DIMSIZ(sDim));
 sElement = DIMNM(sDim,i);
 sElementUID = 'PRO:' | sElement;
 IF(SUBST(sElement,1,1) @<> '}');
  ATTRPUTS('Process',sQUBEDocsDim,sElementUID,'Type');
  ATTRPUTS(sElement,sQUBEDocsDim,sElementUID,'Object');
 ENDIF;
 i=i+1;
END;

sDim = '}Chores'; sParent ='All Chores';
i=1;
WHILE(i<=DIMSIZ(sDim));
 sElement = DIMNM(sDim,i);
 sElementUID = 'CHO:' | sElement;
 IF(SUBST(sElement,1,1) @<> '}');
  ATTRPUTS('Chore',sQUBEDocsDim,sElementUID,'Type');
  ATTRPUTS(sElement,sQUBEDocsDim,sElementUID,'Object');
 ENDIF;
 i=i+1;
END;

sDim = 'QUBEDocs Other Docs'; sParent ='All Other Documentation';
i=1;
WHILE(i<=DIMSIZ(sDim));
sElement = DIMNM(sDim,i);
 sElementUID = 'OTH:' | sElement;
 IF(SUBST(sElement,1,1) @<> '}');
  ATTRPUTS('Document',sQUBEDocsDim,sElementUID,'Type');
  ATTRPUTS(sElement,sQUBEDocsDim,sElementUID,'Object');
 ENDIF;
 i=i+1;
END;

sDim = '}Groups'; sParent ='All Groups';
i=1;
WHILE(i<=DIMSIZ(sDim));
sElement = DIMNM(sDim,i);

IF(DIMIX('}ElementAttributes_' | sDim,sAttr) <>0);
 sElementDV = ATTRS(sDim,sElement,sAttr);
 sElement = IF(sElementDV @<> '',sElementDV,sElement);
ENDIF;

 sElementUID = 'GRP:' | sElement;
# IF(SUBST(sElement,1,1) @<> '}');
  ATTRPUTS('SecurityGroup',sQUBEDocsDim,sElementUID,'Type');
  ATTRPUTS(sElement,sQUBEDocsDim,sElementUID,'Object');
# ENDIF;
 i=i+1;
END;

sDim = '}Clients'; sParent ='All Users';
i=1;
WHILE(i<=DIMSIZ(sDim));
sElement = DIMNM(sDim,i);

IF(DIMIX('}ElementAttributes_' | sDim,sAttr) <>0);
 sElementDV = ATTRS(sDim,sElement,sAttr);
 sElement = IF(sElementDV @<> '',sElementDV,sElement);
ENDIF;

 sElementUID = 'USR:' | sElement;
# IF(SUBST(sElement,1,1) @<> '}');
  ATTRPUTS('SecurityUser',sQUBEDocsDim,sElementUID,'Type');
  ATTRPUTS(sElement,sQUBEDocsDim,sElementUID,'Object');
# ENDIF;
 i=i+1;
END;

#DOCUMENT PLACEHOLDERS
sSetting ='Max No of Documents';
sMaxNoOfDocuments = CELLGETS(sSettingsCube,sSetting,'Enable');

IF(sMaxNoOfDocuments @<> '');

i=1;
nMaxNoOfDocuments = NUMBR(sMaxNoOfDocuments);
sParent = 'All Other Documentation';


WHILE(i<=nMaxNoOfDocuments);
  sPrefix = IF (LONG(NumberToString(i)) = 1,'00','0');
  sElementUID = 'Document ' | sPrefix | NumberToString(i);
  ATTRPUTS('Document',sQUBEDocsDim,sElementUID,'Type');
  #ATTRPUTS('Document',sQUBEDocsDim,sElementUID,'Object');
 i=i+1;
END;
ENDIF;

#endregion