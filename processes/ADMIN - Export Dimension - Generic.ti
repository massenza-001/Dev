#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

##########################################################################################
###  Created June 2017 - sm
###
###  This process exports elements, parent name, and one attribute from a dimension
###
###   The following Parameters are used:
###      pdim - Select Dimension
###      pRoot - Select Root Element
###      pAttribName - Existing Attribute
###
##########################################################################################
###  VERSION CONTROL
###
###  2023-02-01 Initial process built - LL
###
##########################################################################################

#=============================
# Known TM1 FP6 error work around
#=============================
DisableMTQViewConstruct();

#===================================
# >>> DEFINE VARIABLES
#===================================

strAnc = pRoot;
strDim = pDim;
strAttr = pAttribName;

IF ( strAttr @= '');
     strAttr = 'Description';
ENDIF;

strTimeofDay = TIMST ( NOW () , '\Y\m\d\h\i' ) ;


# ***************************
# FOR LEE TESTING - UPDATE SECTION THIS BEFORE USING AT SBG
#strPath = CELLGETS ( 'glbControls' , 'Value' , 'Server FTP Directory' ) | 'Exports\BI Exports\' ;
strPath = '';
# ***************************


IF ( strAnc @= '' ) ;
   strFile = 'TM1_DIMENSION - ' | pDim | ' - '  | 'All Elements' | '.csv' ;
ELSE ;
   strFile = 'TM1_DIMENSION - ' | pDim | ' - ' | pRoot | ' - ' | ' All Elements' | '.csv' ;
ENDIF ;

strFullPath = strPath | strFile;


#=============================================================================================
#>>> LOOP THROUGH DIMENSION ELEMENT ATTRIBUTES
#=============================================================================================

numDimSiz = DIMSIZ ( pDim) ;
numCounter = 1 ;

### HEADER ROW ###
ASCIIOUTPUT ( strFullPath ,  'Dimension' ,  'Element' , 'Parent',  pAttribName ) ;

WHILE ( numCounter <= numDimSiz  ) ;
strElement = DIMNM ( strDim ,  numCounter ) ;

### OUTPUT DIMENSION / ELEMENT / ATTRIBUTE  ###
     strName = ATTRS ( strDim ,  strElement ,  pAttribName ) ;
     IF( strAnc @<> '' ) ; 
           IF( (ELISANC( strDim ,  strAnc ,  strElement ) =1 ) ) ;

                numParentLoop = ELPARN ( strDim, strElement);
                numParentCounter = 1;
                WHILE ( numParentCounter <= numParentLoop);
                     strParent = ELPAR ( strDim, strElement, numParentCounter );
                     IF ( ELISANC ( strDim, strAnc, strParent) = 1 % strAnc @= strParent );
                          strParentToUse = strParent ;
                          numParentCounter = numParentLoop ;
                     ENDIF;
                     numParentCounter = numParentCounter + 1 ;
                END;
                ASCIIOUTPUT ( strFullPath ,  pdim ,  strElement , strParentToUse,  strName ) ;


           ELSEIF (strElement @= strAnc) ;
                ASCIIOUTPUT ( strFullPath ,  pdim ,  strElement , '',  strName) ;
          ENDIF ;
     ENDIF ;

     IF( strAnc @= '' ) ;
          ASCIIOUTPUT ( strFullPath ,  pDim , strElement , '',  strName) ;
     ENDIF ;

    numCounter = numCounter + 1 ;
END;


#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion