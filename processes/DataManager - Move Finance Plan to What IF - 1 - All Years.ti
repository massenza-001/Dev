#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****




#=======================
# GET PARAMETERS
#=======================

strView = 'zzMovePlantoWhatIf1';
strZeroView = 'zzZeroWhatIf1';
strCube = 'bpmFinance';
strSubSet = strView;
strZeroSubSet = strZeroView;

OldCubeLogChanges = CUBEGETLOGCHANGES('bpmFinance');
CUBESETLOGCHANGES('bpmFinance', 1);




#===================
# Create View
#===================

IF ( VIEWEXISTS ( strCube, strView) =1);
     VIEWDESTROY ( strCube, strView);
ENDIF;

VIEWCREATE ( strCube ,strView);

IF ( VIEWEXISTS ( strCube, strZeroView) =1);
     VIEWDESTROY ( strCube, strZeroView);
ENDIF;

VIEWCREATE ( strCube ,strZeroView);

#================================================
# >>>  Create Parameter Subsets
#================================================

strDim = 'bpmScenario';
strScenario = 'Plan';
IF( SUBSETEXISTS (strDim, strSubSet) = 1);
            SUBSETDELETEALLELEMENTS (strDim, strSubSet);
      ELSE;
          SUBSETCREATE (strDim, strSubSet);
ENDIF;

SUBSETELEMENTINSERT ( strDim, strSubSet, strScenario, 1);
VIEWSUBSETASSIGN ( strCube, strView, strDim, strSubSet);

#============================
#>>> Odball Zero Out Subset
#============================
strDim = 'bpmScenario';
strScenario = 'What If - 1';
IF( SUBSETEXISTS (strDim, strZeroSubSet) = 1);
            SUBSETDELETEALLELEMENTS (strDim, strZeroSubSet);
      ELSE;
          SUBSETCREATE (strDim, strZeroSubSet);
ENDIF;

SUBSETELEMENTINSERT ( strDim, strZeroSubSet, strScenario, 1);
VIEWSUBSETASSIGN ( strCube, strZeroView, strDim, strZeroSubSet);



#================================================
# >>> All Level Zero Subsets
#================================================

strDim = 'bpmYear';
IF( SUBSETEXISTS (strDim, strSubSet) = 1);
            SUBSETDESTROY( strDim, strSubSet);
ENDIF;

SUBSETCREATEBYMDX  (strSubSet, '{TM1SORT( {TM1FILTERBYLEVEL( {TM1SUBSETALL( [' | strDim | '] )}, 0)}, ASC)}');
VIEWSUBSETASSIGN ( strCube, strView, strDim, strSubSet);
VIEWSUBSETASSIGN ( strCube, strZeroView, strDim, strSubSet);


strDim = 'bpmCompany';
IF( SUBSETEXISTS (strDim, strSubSet) = 1);
            SUBSETDESTROY( strDim, strSubSet);
ENDIF;

SUBSETCREATEBYMDX  (strSubSet, '{TM1SORT( {TM1FILTERBYLEVEL( {TM1SUBSETALL( [' | strDim | '] )}, 0)}, ASC)}');
VIEWSUBSETASSIGN ( strCube, strView, strDim, strSubSet);
VIEWSUBSETASSIGN ( strCube, strZeroView, strDim, strSubSet);


strDim = 'bpmDepartment';
IF( SUBSETEXISTS (strDim, strSubSet) = 1);
            SUBSETDESTROY( strDim, strSubSet);
ENDIF;

SUBSETCREATEBYMDX  (strSubSet, '{TM1SORT( {TM1FILTERBYLEVEL( {TM1SUBSETALL( [' | strDim | '] )}, 0)}, ASC)}');
VIEWSUBSETASSIGN ( strCube, strView, strDim, strSubSet);
VIEWSUBSETASSIGN ( strCube, strZeroView, strDim, strSubSet);


strDim = 'bpmAccount';
IF( SUBSETEXISTS (strDim, strSubSet) = 1);
            SUBSETDESTROY( strDim, strSubSet);
ENDIF;

SUBSETCREATEBYMDX  (strSubSet, '{TM1SORT( {TM1FILTERBYLEVEL( {TM1SUBSETALL( [' | strDim | '] )}, 0)}, ASC)}');
VIEWSUBSETASSIGN ( strCube, strView, strDim, strSubSet);
VIEWSUBSETASSIGN ( strCube, strZeroView, strDim, strSubSet);


strDim = 'bpmBook';
IF( SUBSETEXISTS (strDim, strSubSet) = 1);
            SUBSETDESTROY( strDim, strSubSet);
ENDIF;

SUBSETCREATEBYMDX  (strSubSet, '{TM1SORT( {TM1FILTERBYLEVEL( {TM1SUBSETALL( [' | strDim | '] )}, 0)}, ASC)}');
VIEWSUBSETASSIGN ( strCube, strView, strDim, strSubSet);
VIEWSUBSETASSIGN ( strCube, strZeroView, strDim, strSubSet);


strDim = 'bpmPeriod';
IF( SUBSETEXISTS (strDim, strSubSet) = 1);
            SUBSETDESTROY( strDim, strSubSet);
ENDIF;

SUBSETCREATEBYMDX  (strSubSet, '{TM1SORT( {TM1FILTERBYLEVEL( {TM1SUBSETALL( [' | strDim | '] )}, 0)}, ASC)}');
VIEWSUBSETASSIGN ( strCube, strView, strDim, strSubSet);
VIEWSUBSETASSIGN ( strCube, strZeroView, strDim, strSubSet);


VIEWZEROOUT( strCube, strZeroView);


ViewExtractSkipCalcsSet (strCube, strView, 1);
ViewExtractSkipRuleValuesSet (strCube, strView, 1);
ViewExtractSkipZeroesSet (strCube, strView, 1);
DATASOURCECUBEVIEW = strView;







#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****


#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****




strScenario= 'What If - 1';

IF( CellIsUpdateable( strCube, strScenario,vCompany,vDepartment,vAccount,vBook, vYear ,vPeriod) = 1);
     CellPutN(vVALUE, strCube, strScenario,vCompany,vDepartment,vAccount,vBook, vYear ,vPeriod);
ENDIF;

#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****


OldCubeLogChanges = CUBEGETLOGCHANGES('bpmFinance');
CUBESETLOGCHANGES('bpmFinance', 1);



#================================================
# >>>  Cleanup
#================================================


strView = 'zzMovePlantoWhatIf1';
strCube = 'bpmFinance';
strSubSet = strView;

#===================
#>>> Destroy View
#===================

IF ( VIEWEXISTS ( strCube, strView) =1);
     VIEWDESTROY ( strCube, strView);
ENDIF;

IF ( VIEWEXISTS ( strCube, strZeroView) =1);
     VIEWDESTROY (  strCube, strZeroView);
ENDIF;
#===================
#>>> Destroy Subsets
#===================

strDim = 'bpmScenario';
IF( SUBSETEXISTS (strDim, strSubSet) = 1);
            SUBSETDESTROY( strDim, strSubSet);
ENDIF;

strDim = 'bpmScenario';
IF( SUBSETEXISTS (strDim, strZeroSubSet) = 1);
            SUBSETDESTROY( strDim, strZeroSubSet);
ENDIF;

strDim = 'bpmYear';
IF( SUBSETEXISTS (strDim, strSubSet) = 1);
            SUBSETDESTROY( strDim, strSubSet);
ENDIF;


strDim = 'bpmCompany';
IF( SUBSETEXISTS (strDim, strSubSet) = 1);
            SUBSETDESTROY( strDim, strSubSet);
ENDIF;


strDim = 'bpmDepartment';
IF( SUBSETEXISTS (strDim, strSubSet) = 1);
            SUBSETDESTROY( strDim, strSubSet);
ENDIF;


strDim = 'bpmAccount';
IF( SUBSETEXISTS (strDim, strSubSet) = 1);
            SUBSETDESTROY( strDim, strSubSet);
ENDIF;


strDim = 'bpmBook';
IF( SUBSETEXISTS (strDim, strSubSet) = 1);
            SUBSETDESTROY( strDim, strSubSet);
ENDIF;


strDim = 'bpmPeriod';
IF( SUBSETEXISTS (strDim, strSubSet) = 1);
            SUBSETDESTROY( strDim, strSubSet);
ENDIF;

#endregion