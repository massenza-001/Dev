#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

# ===============
# Global Variables
# ===============

strCube = 'bpmFinance_Comp_Emp_Info';

strOutputPath = 'C:\Work\Clients\CX2\TM1Server\Exports\';

# =================================================
# set trigger to deactivate rules before clearing/reloading data
# =================================================

# CELLPUTS ( 'Y', '}bpmControls', 'Value', 'DeActivate EmpInfo Rules' ) ;

# ===============
# create subset
# ===============

strView = 'zzFinanceCompEmpInfoZeroOut';
strSub = strView;
strSourceView = strView ;

IF (VIEWEXISTS (strCube, strView) <> 0);
    VIEWDESTROY (strCube, strView);
ENDIF;

VIEWCREATE (strCube, strView);

# ====================
# Scenario = Plan
# ====================

strDim = 'bpmScenario';
strElement = 'Plan' ;

IF (SUBSETEXISTS (strDim, strSub) = 0);
     SUBSETCREATE (strDim, strSub);
ENDIF;

SUBSETDELETEALLELEMENTS (strDim, strSub);
SUBSETELEMENTINSERT ( strDim, strSub, strElement, 1 );
VIEWSUBSETASSIGN (strCube, strView, strDim, strSub);


# ====================
# Company
# ====================

strDim = 'bpmCompany';


IF (SUBSETEXISTS (strDim, strSub) = 0);
     SUBSETCREATE (strDim, strSub);
ENDIF;

SUBSETDELETEALLELEMENTS (strDim, strSub);

numDimSiz = DIMSIZ (strDim);
numCounter = 1;
WHILE ( numCounter <= numDimSiz);
     strElement = DIMNM ( strDim, numCounter);
     IF ( ELLEV ( strDim, strElement) = 0);
          SUBSETELEMENTINSERT ( strDim, strSub, strElement, 1 );
     ENDIF;
     numCounter = numCounter + 1;
END;

VIEWSUBSETASSIGN ( strCube, strView, strDim, strSub );


# ====================
# Department
# ====================

strDim = 'bpmDepartment';


IF (SUBSETEXISTS (strDim, strSub) = 0);
     SUBSETCREATE (strDim, strSub);
ENDIF;

SUBSETDELETEALLELEMENTS (strDim, strSub);

numDimSiz = DIMSIZ (strDim);
numCounter = 1;
WHILE ( numCounter <= numDimSiz);
     strElement = DIMNM ( strDim, numCounter);
     IF ( ELLEV ( strDim, strElement) = 0);
          SUBSETELEMENTINSERT ( strDim, strSub, strElement, 1 );
     ENDIF;
     numCounter = numCounter + 1;
END;

VIEWSUBSETASSIGN ( strCube, strView, strDim, strSub );



# ====================
# FinanceCompIndex
# ====================

strDim = 'bpmFinance_Comp_Index' ;


IF (SUBSETEXISTS (strDim, strSub) = 0);
     SUBSETCREATE (strDim, strSub);
ENDIF;

SUBSETDELETEALLELEMENTS (strDim, strSub);

numDimSiz = DIMSIZ (strDim);
numCounter = 1;
WHILE ( numCounter <= numDimSiz);
     strElement = DIMNM ( strDim, numCounter);
     IF ( ELLEV ( strDim, strElement) = 0);
          SUBSETELEMENTINSERT ( strDim, strSub, strElement, 1 );
     ENDIF;
     numCounter = numCounter + 1;
END;

VIEWSUBSETASSIGN ( strCube, strView, strDim, strSub );

# ==================
# FinanceCompInfo
# ==================

strDim = 'bpmFinance_Comp_Employee_Info' ;


IF (SUBSETEXISTS (strDim, strSub) = 0);
     SUBSETCREATE (strDim, strSub);
ENDIF;

SUBSETELEMENTINSERT ( strDim, strSub, 'Name', 1 );
SUBSETELEMENTINSERT ( strDim, strSub, 'Annual Salary', 1 );

VIEWSUBSETASSIGN ( strCube, strView, strDim, strSub );

# ==================================
# Get the basics and set stuff for export
# ==================================

VIEWEXTRACTSKIPZEROESSET(strCube, strSourceView, 1);
VIEWEXTRACTSKIPCALCSSET(strCube, strSourceView, 1);
VIEWEXTRACTSKIPRULEVALUESSET(strCube, strSourceView, 1);

DATASOURCENAMEFORSERVER=strCube;
DATASOURCECUBEVIEW=strSourceView;


#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****

strView = 'zzFinanceCompEmpInfoZeroOut';

strFileName = strOutputPath | 'FinanceCompEmpInfoExport2.txt' ;

ASCIIOUTPUT( strFileName, vScenario, vCompany, vDepartment, vCompIndex,  vCompInfo, vValue ) ;

strFileName = strOutputPath | 'FinanceCompEmpInfoExport3.txt' ;

TEXTOUTPUT( strFileName, vScenario, vCompany, vDepartment, vCompIndex,  vCompInfo, vValue ) ;








#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****




#endregion