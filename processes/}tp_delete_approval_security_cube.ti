#region Prolog
#################################################################
## IBM Confidential
##
## OCO Source Materials
##
## BI and PM: pmpsvc
##
## (C) Copyright IBM Corp. 2008, 2009, 2010
##
## The source code for this program is not published or otherwise
## divested of its trade secrets, irrespective of what has been
## deposited with the U.S. Copyright Office.
#################################################################


cControlPrefix = '';
If (pControl @= 'Y');
	cControlPrefix = '}';
EndIf;

#*** Log File Name
cConfigDim = cControlPrefix | 'tp_config';
If (DimensionExists(cConfigDim) = 1);
	cGenerateLog = ATTRS(cConfigDim, 'Generate TI Log', 'String Value');
Else;
	cGenerateLog = 'N';
EndIf;

cTM1Process = GetProcessName();
StringGlobalVariable('gPrologLog');
StringGlobalVariable('gEpilogLog');
StringGlobalVariable('gDataLog');

IF (cGenerateLog @= 'Y' % cGenerateLog @= 'T');
	vReturnValue = ExecuteProcess(cControlPrefix | 'tp_get_log_file_names', 'pExecutionId', pExecutionId,
	'pProcess', cTM1Process, 'pControl', pControl);
	If (vReturnValue <> ProcessExitNormal());
		ProcessError;
	EndIf;
Endif;

cPrologLog = gPrologLog;
cEpilogLog = gEpilogLog;
cDataLog = gDataLog;
cTM1Log = cPrologLog;

#*** Log Parameters

If (cGenerateLog @= 'Y');
	TextOutput(cTM1Log, 'Parameters:', TIMST(NOW, '\Y-\m-\d \h:\i:\s'), pExecutionId, pApproval, pControl);
EndIf;

cSecurityCube = '}ElementSecurity_' | pApproval;
If (cGenerateLog @= 'Y');
	TextOutput(cTM1Log, 'Checking for security cube:', TIMST(NOW, '\Y-\m-\d \h:\i:\s'), cSecurityCube);
EndIf;

If (CubeExists(cSecurityCube) = 1);
	If (cGenerateLog @= 'Y');
		TextOutput(cTM1Log, 'Security cube exists, calling CubeDestroy:', TIMST(NOW, '\Y-\m-\d \h:\i:\s'), cSecurityCube);
	EndIf;
	CubeDestroy(cSecurityCube);
Else;
	If (cGenerateLog @= 'Y');
		TextOutput(cTM1Log, 'Security cube does not exist:', TIMST(NOW, '\Y-\m-\d \h:\i:\s'), cSecurityCube);
	EndIf;
EndIf;



#endregion