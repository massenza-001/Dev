#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

#=============================================================================================
# Author: Don Cole
# Date:  8/22/14
#   Purpose         : To copy a Scenario and Year for selected Cubes 
#   Parameters    :  pYear, pScenario
#   Prolog            : initialize variables and set up source
#   Metadata       : none
#   Data              : update cube settings for year and scenario
#   Epilog            : none 
#=============================================================================================

#----------------------------------------------
# >>> initialize variables
#----------------------------------------------
strBatchName = 'BPMS Copy';

#-------------------------------------------------------
#>>> CREATE New Scenario if Found in Data
#-------------------------------------------------------
strDim = 'bpmScenario';
strElement =  pTgtScenario ;

IF( DIMIX ( strDim , strElement ) = 0 );
    DIMENSIONELEMENTINSERT ( strDim, '', strElement, 'N');
ENDIF;


# ================================
# CREATE Source VIEW
# ================================

strCube = 'rdmDatamanagerDetails';
strView = 'zzCopyScenSource';
strSub = strView;

IF(VIEWEXISTS(strCube, strView) = 1);
   VIEWDESTROY(strCube, strView);
ENDIF;
VIEWCREATE(strCube, strView);

VIEWEXTRACTSKIPCALCSSET(strCube, strView, 1);
VIEWEXTRACTSKIPRULEVALUESSET(strCube, strView, 0);
VIEWEXTRACTSKIPZEROESSET(strCube, strView, 1);


i = 1;
WHILE(TABDIM(strCube, i) @<> '');
   strDim = TABDIM(strCube, i);

   IF(SUBSETEXISTS(strDim, strSub) = 0);
      SUBSETCREATE(strDim, strSub);
   ENDIF;
   SUBSETDELETEALLELEMENTS(strDim, strSub);

   VIEWSUBSETASSIGN(strCube, strView, strDim, strSub);

   IF(strDim @= 'rdmDatamanagerVariable');
      strElem = 'Dim Name';
      SUBSETELEMENTINSERT(strDim, strSub, strElem, SUBSETGETSIZE(strDim, strSub) + 1);
   ELSEIF(strDim @= 'rdmDatamanagerIndex');
      strElem = 'BPMS Copy';
      SUBSETELEMENTINSERT(strDim, strSub, strElem, SUBSETGETSIZE(strDim, strSub) + 1);
   ELSE;
      p = 1;
      WHILE(p <= DIMSIZ(strDim));
         strLoopElem = DIMNM(strDim, p);
         IF(ELLEV(strDim, strLoopElem) = 0);
            SUBSETELEMENTINSERT(strDim, strSub, strLoopElem, SUBSETGETSIZE(strDim, strSub) + 1);
         ENDIF;
         p = p + 1;
      END;
   ENDIF;

   i = i + 1;
END;

# ==================================
# SET DATA SOURCE TO SOURCE VIEW
# ==================================

DATASOURCENAMEFORSERVER = strCube;
DATASOURCETYPE = 'VIEW';
DATASOURCECUBEVIEW = strView;



#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****

IF( vCubes@<> 'bpmFinance');
     ITEMSKIP;
ENDIF;
#Update the FROM and TO for Period when found
IF( SCAN('Period', vValue)<> 0
       % vValue @= 'bpmCatYear');
     CELLPUTS(pSrcPeriod, strCube, vCubes, vRDMIndex, vRDMDim, 'FROM' );
     CELLPUTS(pTgtPeriod, strCube, vCubes, vRDMIndex, vRDMDim, 'TO' );
ENDIF;

#Update the FROM and TO for Scenario when found
IF(vValue @= 'bpmScenario');
    CELLPUTS(pSrcScenario, strCube, vCubes, vRDMIndex, vRDMDim, 'FROM' ); 
    CELLPUTS(pTgtScenario, strCube, vCubes, vRDMIndex, vRDMDim, 'TO' );
ENDIF;



#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****


#Call the process to run with the updated Year and Scenario

 strProcess = 'Datamanager - Batch Call';
 EXECUTEPROCESS( strProcess, 'pBatchName', strBatchName);




# Destroy Source View and Subsets 

VIEWDESTROY(strCube, strView);

i = 1;
WHILE(TABDIM(strCube, i) @<> '');
    strDim = TABDIM(strCube, i);

    IF(SUBSETEXISTS(strDim, strSub) = 1);
       SUBSETDESTROY(strDim, strSub);
    ENDIF;
    i = i + 1;
END;
#endregion