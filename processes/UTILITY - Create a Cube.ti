#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****


#=============================================================================================
# PURPOSE - Process will create cubes with up to 20 dimensions.
#
# PARAMETERS:
#     parNewCube              - New Cube Name
#     parDim(1-20)               - Dimension Names
#
# NOTES:
#     -All dimensions must pre-exist.
#     -Order is as entered.
#     -Blank dimensions are ignored.    
#=============================================================================================

#=============================================================================================
# >>> Define Global Variables
#=============================================================================================

strNameofCubetoCreate = parNewCube ;
strDim1 = parDim1 ;
strDim2 = parDim2 ;
strDim3 = parDim3 ;
strDim4 = parDim4 ;
strDim5 = parDim5 ;
strDim6 = parDim6 ;
strDim7 = parDim7 ;
strDim8 = parDim8 ;
strDim9 = parDim9 ;
strDim10 = parDim10 ;
strDim11 = parDim11 ;
strDim12 = parDim12 ;
strDim13 = parDim13 ;
strDim14 = parDim14 ;
strDim15 = parDim15 ;
strDim16 = parDim16 ;
strDim17 = parDim17 ;
strDim18 = parDim18 ;
strDim19 = parDim19 ;
strDim20 = parDim20 ;

#=============================================================================================
# >>> Do not allow an existing cube to be modified
#=============================================================================================

IF ( CubeExists ( strNameofCubetoCreate ) = 1 ) ;
   ProcessQuit ;
ENDIF ;


#=============================================================================================
# >>> Cube must have at least two dimensions
#=============================================================================================
IF ( TRIM( parDim1 ) @= '' % TRIM( parDim2 ) @= '' ) ;
   ProcessQuit ;
ENDIF ;


#=============================================================================================
# >>> Check to make sure the dimensions exist
#=============================================================================================

strDimVar = strDim1 ;
IF ( DimensionExists ( strDimVar ) = 0 ) ;
   ProcessQuit ;
ENDIF ;

strDimVar = strDim2 ;
IF ( DimensionExists ( strDimVar ) = 0 ) ;
   ProcessQuit ;
ENDIF ;

strDimVar = strDim3 ;
IF ( DimensionExists ( strDimVar) = 0 & TRIM( strDimVar ) @<> '' ) ;
   ProcessQuit ;
ENDIF ;

strDimVar = strDim4 ;
IF ( DimensionExists ( strDimVar ) = 0 & TRIM ( strDimVar ) @<> '' ) ;
   ProcessQuit ;
ENDIF ;

strDimVar = strDim5 ;
IF ( DimensionExists ( strDimVar) = 0 & TRIM ( strDimVar ) @<> '' ) ;
   ProcessQuit ;
ENDIF ;

strDimVar = strDim6 ;
IF ( DimensionExists ( strDimVar ) = 0 & TRIM ( strDimVar ) @<> '' ) ;
   ProcessQuit ;
ENDIF ;

strDimVar = strDim7 ;
IF ( DimensionExists ( strDimVar ) = 0 & TRIM ( strDimVar ) @<> '' ) ;
   ProcessQuit ;
ENDIF ;

strDimVar = strDim8 ;
IF ( DimensionExists ( strDimVar ) = 0 & TRIM ( strDimVar ) @<> '' ) ;
   ProcessQuit;
ENDIF;

strDimVar = strDim9 ;
IF ( DimensionExists ( strDimVar ) = 0 & TRIM ( strDimVar ) @<> '' ) ;
   ProcessQuit ;
ENDIF ;

strDimVar = strDim10 ;
IF ( DimensionExists ( strDimVar ) = 0 & TRIM ( strDimVar ) @<> '' ) ;
   ProcessQuit ;
ENDIF ;

strDimVar = strDim11 ;
IF ( DimensionExists ( strDimVar ) = 0 & TRIM ( strDimVar ) @<> '' ) ;
   ProcessQuit ;
ENDIF ;

strDimVar = strDim12 ;
IF ( DimensionExists ( strDimVar ) = 0 & TRIM ( strDimVar ) @<> '' ) ;
   ProcessQuit ;
ENDIF ;

strDimVar = strDim13 ;
IF ( DimensionExists ( strDimVar ) = 0 & TRIM ( strDimVar ) @<> '' ) ;
   ProcessQuit ;
ENDIF ;

strDimVar = strDim14 ;
IF ( DimensionExists ( strDimVar) = 0 & TRIM ( strDimVar ) @<> '' ) ;
   ProcessQuit ;
ENDIF ;

strDimVar = strDim15 ;
IF ( DimensionExists ( strDimVar ) = 0 & TRIM ( strDimVar ) @<> '' ) ;
   ProcessQuit ;
ENDIF ;

strDimVar = strDim16 ;
IF ( DimensionExists ( strDimVar ) = 0 & TRIM ( strDimVar ) @<> '' ) ;
   ProcessQuit ;
ENDIF ;

strDimVar = strDim17 ;
IF ( DimensionExists ( strDimVar ) = 0 & TRIM ( strDimVar ) @<> '' ) ;
   ProcessQuit ;
ENDIF ;

strDimVar = strDim18 ;
IF ( DimensionExists ( strDimVar ) = 0 & TRIM ( strDimVar ) @<> '' ) ;
   ProcessQuit ;
ENDIF ;

IF ( DimensionExists ( strDimVar ) = 0 & TRIM ( strDimVar ) @<> '' ) ;
   ProcessQuit ;
ENDIF ;

strDimVar = strDim20 ;
IF ( DimensionExists ( strDimVar ) = 0 & TRIM ( strDimVar ) @<> '' ) ;
   ProcessQuit ;
ENDIF ;


#=============================================================================================
# >>> Create cube
#=============================================================================================

IF ( strDim3 @= '' ) ;
        CubeCreate ( strNameofCubetoCreate , strDim1 , strDim2 ) ;
     ELSEIF ( strDim4 @= '') ;
        CubeCreate ( strNameofCubetoCreate , strDim1 , strDim2 , strDim3 ) ;
     ELSEIF ( strDim5 @= '' ) ;
        CubeCreate ( strNameofCubetoCreate , strDim1 , strDim2 , strDim3 , strDim4 ) ;
     ELSEIF ( strDim6 @= '' ) ;
        CubeCreate ( strNameofCubetoCreate , strDim1 , strDim2 , strDim3 , strDim4 , strDim5 ) ;
     ELSEIF ( strDim7 @= '' ) ;
        CubeCreate ( strNameofCubetoCreate , strDim1 , strDim2 , strDim3 , strDim4 , strDim5 , strDim6 ) ;
     ELSEIF ( strDim8 @= '') ;
        CubeCreate ( strNameofCubetoCreate , strDim1 , strDim2 , strDim3 , strDim4 , strDim5 , strDim6 , strDim7 ) ;
     ELSEIF ( strDim9 @= '' ) ;
        CubeCreate ( strNameofCubetoCreate , strDim1 , strDim2 , strDim3 , strDim4 , strDim5 , strDim6 , strDim7 , strDim8 ) ;
     ELSEIF ( strDim10 @= '' ) ;
         CubeCreate ( strNameofCubetoCreate , strDim1 , strDim2 , strDim3 , strDim4 , strDim5 , strDim6 , strDim7 , strDim8 , strDim9 ) ;
     ELSEIF ( strDim11 @= '' ) ;
          CubeCreate ( strNameofCubetoCreate , strDim1 , strDim2 , strDim3 , strDim4 , strDim5 , strDim6 , strDim7 , strDim8 , strDim9 , strDim10 ) ;
     ELSEIF ( strDim12 @= '' ) ;
        CubeCreate ( strNameofCubetoCreate , strDim1 , strDim2 , strDim3 , strDim4 , strDim5 , strDim6 , strDim7 , strDim8 , strDim9 , strDim10 ,
                                      strDim11 ) ;
     ELSEIF ( strDim13 @= '' ) ;
        CubeCreate ( strNameofCubetoCreate , strDim1 , strDim2 , strDim3 , strDim4 , strDim5 , strDim6 , strDim7 , strDim8 , strDim9 , strDim10 ,
                                      strDim11 , strDim12 ) ;
     ELSEIF ( strDim14 @= '' ) ;
        CubeCreate ( strNameofCubetoCreate , strDim1 , strDim2 , strDim3 , strDim4 , strDim5 , strDim6 , strDim7 , strDim8 , strDim9 , strDim10 ,
                                      strDim11 , strDim12 , strDim13 ) ;
     ELSEIF ( strDim15 @= '' ) ;
        CubeCreate ( strNameofCubetoCreate , strDim1 , strDim2 , strDim3 , strDim4 , strDim5 , strDim6 , strDim7 , strDim8 , strDim9 , strDim10 ,
                                      strDim11 , strDim12 , strDim13 , strDim14 ) ;
     ELSEIF ( strDim16 @= '' ) ;
        CubeCreate ( strNameofCubetoCreate , strDim1 , strDim2 , strDim3 , strDim4 , strDim5 , strDim6 , strDim7 , strDim8 , strDim9 , strDim10 ,
                                      strDim11 , strDim12 , strDim13 , strDim14 , strDim15 ) ;
     ELSEIF ( strDim17 @= '' ) ;
        CubeCreate ( strNameofCubetoCreate , strDim1 , strDim2 , strDim3 , strDim4 , strDim5 , strDim6 , strDim7 , strDim8 , strDim9 , strDim10 ,
                                      strDim11 , strDim12 , strDim13 , strDim14 , strDim15 , strDim16 ) ;
     ELSEIF ( strDim18 @= '' ) ;
        CubeCreate ( strNameofCubetoCreate , strDim1 , strDim2 ,  strDim3 , strDim4 , strDim5 , strDim6 , strDim7 , strDim8 , strDim9 , strDim10 ,
                                      strDim11 , strDim12 , strDim13 , strDim14 , strDim15 , strDim16 , strDim17 ) ;
     ELSEIF ( strDim19 @= '') ;
        CubeCreate ( strNameofCubetoCreate , strDim1 , strDim2 , strDim3 , strDim4 , strDim5 , strDim6 , strDim7 , strDim8 , strDim9 , strDim10 ,
                                      strDim11 , strDim12 , strDim13 , strDim14 , strDim15 , strDim16 , strDim17 , strDim18 ) ;
     ELSEIF ( strDim20 @= '') ;
        CubeCreate ( strNameofCubetoCreate , strDim1 , strDim2 , strDim3 , strDim4 , strDim5 , strDim6 , strDim7 , strDim8 , strDim9 , strDim10 ,
                                      strDim11 , strDim12 , strDim13 , strDim14 , strDim15 , strDim16 , strDim17 , strDim18 , strDim19 ) ;
     ELSE ;
        CubeCreate ( strNameofCubetoCreate , strDim1 , strDim2 , strDim3 , strDim4 , strDim5 , strDim6 , strDim7 , strDim8 , strDim9 , strDim10 ,
                                      strDim11 , strDim12 , strDim13 , strDim14 , strDim15 , strDim16 , strDim17 , strDim18 , strDim19 , strDim20 ) ;
     ENDIF ;

#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion