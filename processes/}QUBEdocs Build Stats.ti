#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

#LASTCHANGE Added support for multiple instances of stats
#GENERALCOMMENT This process builds the the QUBEdocs Objects dimension which is used to capture stats against
#DATASOURCECOMMENT Not Applicable
#PROLOGCOMMENT Adds the list of cubes dimensions, processes and chores to the QUBEdocs object dimension 
#METADATACOMMENT Not Applicable
#DATACOMMENT Not Applicable
#EPILOGCOMMENT Adds attribute values to the QUBEdocs Object dimension

sCube = '}QUBEdocs Stats';
sQUBEdocsDim = '}QUBEdocs Object';
sSettingsCube = '}ElementAttributes_QUBEdocs Setup Item';

i=1; sStrCubeList = '';
WHILE(i < DIMSIZ(sQUBEdocsDim));
 sStrCubeList = sStrCubeList | DIMNM(sQUBEdocsDim,i) | '|';
 i = i + 1;
END;

DimensionDeleteAllElements(sQUBEdocsDim);
sParent ='All Objects';
sModelEl = 'Entire Model';

###########################
#ADD IN BASE CONSOLIDATIONS
###########################
DIMENSIONELEMENTINSERT(sQUBEdocsDim, '', 'All Objects','C');   
DIMENSIONELEMENTINSERT(sQUBEdocsDim, '', 'Server','N'); DimensionElementComponentAdd(sQUBEdocsDim, sParent,'Server', 1);
DIMENSIONELEMENTINSERT(sQUBEdocsDim, '', 'All Cubes','C'); DimensionElementComponentAdd(sQUBEdocsDim, sParent,'All Cubes', 1);
DIMENSIONELEMENTINSERT(sQUBEdocsDim, '', 'All Dimensions','C'); DimensionElementComponentAdd(sQUBEdocsDim, sParent,'All Dimensions', 1);
DIMENSIONELEMENTINSERT(sQUBEdocsDim, '', 'All Processes','C'); DimensionElementComponentAdd(sQUBEdocsDim, sParent,'All Processes', 1);
DIMENSIONELEMENTINSERT(sQUBEdocsDim, '', 'All Chores','C'); DimensionElementComponentAdd(sQUBEdocsDim, sParent,'All Chores', 1);

###########################
#ADD INSTANCE
###########################
sSetting ='Performance Stats over time';
IF(ATTRS('QUBEdocs Setup Item', sSetting,'Enable') @= 'YES');
 sInstanceName = Today(1);
 sInstanceDim = '}QUBEdocs Stat Instance';
 DIMENSIONELEMENTINSERT(sInstanceDim,'',sInstanceName,'N');   
ENDIF;

###########################
#ADD CUBES
###########################
sDim = '}Cubes'; sParent ='All Cubes';
i=1;
WHILE(i<=DIMSIZ(sDim));
 sElement = DIMNM(sDim,i);
 sElementUID = 'CUB:' | sElement;
 IF(SUBST(sElement,1,1) @<> '}');
  DIMENSIONELEMENTINSERT(sQUBEdocsDim, '',   sElementUID,'N');
  DIMENSIONELEMENTCOMPONENTADD(sQUBEdocsDim, sParent, sElementUID, 1);
 ENDIF;
 i=i+1;
END;

###########################
#ADD DIMENSIONS
###########################

sDim = '}Dimensions'; sParent ='All Dimensions';

i=1;
WHILE(i<=DIMSIZ(sDim));
 sElement = DIMNM(sDim,i);
 sElementUID = 'DIM:' | sElement;
 IF(SUBST(sElement,1,1) @<> '}');
  DIMENSIONELEMENTINSERT(sQUBEdocsDim, '', sElementUID,'N');
  DIMENSIONELEMENTCOMPONENTADD(sQUBEdocsDim, sParent,sElementUID, 1);
 ENDIF;
 i=i+1;
END;

###########################
#ADD PROCESSES
###########################

sDim = '}Processes'; sParent ='All Processes';
i=1;
WHILE(i<=DIMSIZ(sDim));
 sElement = DIMNM(sDim,i);
 sElementUID = 'PRO:' | sElement;
 IF(SUBST(sElement,1,1) @<> '}');
  DIMENSIONELEMENTINSERT(sQUBEdocsDim, '', sElementUID,'N');
  DIMENSIONELEMENTCOMPONENTADD(sQUBEdocsDim, sParent,sElementUID, 1);
 ENDIF;
 i=i+1;
END;

###########################
#ADD CHORES
###########################

sDim = '}Chores'; sParent ='All Chores';
i=1;
WHILE(i<=DIMSIZ(sDim));
 sElement = DIMNM(sDim,i);
 sElementUID = 'CHO:' | sElement;
 IF(SUBST(sElement,1,1) @<> '}');
  DIMENSIONELEMENTINSERT(sQUBEdocsDim, '', sElementUID,'N');
  DIMENSIONELEMENTCOMPONENTADD(sQUBEdocsDim, sParent,sElementUID, 1);
 ENDIF;
 i=i+1;
END;

DimensionSortOrder ( sQUBEdocsDim, 'ByName', 'Ascending', 'ByHierarchy', '' );
#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****


sDim = '}Cubes'; sParent ='All Cubes';
i=1;
WHILE(i<=DIMSIZ(sDim));
 sElement = DIMNM(sDim,i);
 sElementUID = 'CUB:' | sElement;
 IF(SUBST(sElement,1,1) @<> '}');
  ATTRPUTS('Cube',sQUBEDocsDim,sElementUID,'Type');
  ATTRPUTS(sElement,sQUBEDocsDim,sElementUID,'Object');
 ENDIF;
 i=i+1;
END;

sDim = '}Dimensions'; sParent ='All Dimensions';

i=1;
WHILE(i<=DIMSIZ(sDim));
sElement = DIMNM(sDim,i);
 sElementUID = 'DIM:' | sElement;
 IF(SUBST(sElement,1,1) @<> '}');
  ATTRPUTS('Dimension',sQUBEDocsDim,sElementUID,'Type');
  ATTRPUTS(sElement,sQUBEDocsDim,sElementUID,'Object');
 ENDIF;
 i=i+1;
END;

sDim = '}Processes'; sParent ='All Processes';
i=1;
WHILE(i<=DIMSIZ(sDim));
 sElement = DIMNM(sDim,i);
 sElementUID = 'PRO:' | sElement;
 IF(SUBST(sElement,1,1) @<> '}');
  ATTRPUTS('Process',sQUBEDocsDim,sElementUID,'Type');
  ATTRPUTS(sElement,sQUBEDocsDim,sElementUID,'Object');
 ENDIF;
 i=i+1;
END;

sDim = '}Chores'; sParent ='All Chores';
i=1;
WHILE(i<=DIMSIZ(sDim));
 sElement = DIMNM(sDim,i);
 sElementUID = 'CHO:' | sElement;
 IF(SUBST(sElement,1,1) @<> '}');
  ATTRPUTS('Chore',sQUBEDocsDim,sElementUID,'Type');
  ATTRPUTS(sElement,sQUBEDocsDim,sElementUID,'Object');
 ENDIF;
 i=i+1;
END;

#endregion