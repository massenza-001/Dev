#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****




#=================================
# >>> Define Global Variables
#=================================

strProcessName = GETPROCESSNAME();
strCube_g = 'sgTestSQL';

strZeroView_g = 'zz_' | strProcessName | '_ZeroOut';
strZeroSub_g = strZeroView_g;

strLogPath =  '..\..\..\prod\PTR01-AA\Logs\';


strDataSourceFilePath = '..\..\..\prod\PTR01-AA\Transfer\';


strErrorFile = strProcessName | '_' | TIMST(NOW, '\Y\m\d at \H\p \imin\ssec') | '.csv';
strError = strLogPath | strErrorFile;


### Cube Dimensions ########
strScenarioDim = 'bpmScenario';
strCompanyDim = 'bpmCompany';
strDeptDim = 'bpmDepartment';
strAcctDim = 'bpmAccount';
strCurrencyDim = 'bpmCurrency';
strBookDim = 'bpmBook';
strPeriodDim = 'bpmPeriod';


# =====================================================
# >>> Zero Out View - Test cube
# =====================================================

strCube = strCube_g;

strView = strZeroView_g;
strSub = strZeroSub_g;

IF(VIEWEXISTS(strCube, strView) = 1);
   VIEWDESTROY(strCube, strView);
ENDIF;
VIEWCREATE(strCube, strView);

VIEWEXTRACTSKIPCALCSSET(strCube, strView, 1);
VIEWEXTRACTSKIPRULEVALUESSET(strCube, strView, 1);
VIEWEXTRACTSKIPZEROESSET(strCube, strView, 1);

i = 1;
WHILE(TABDIM(strCube, i) @<> '');
   strDim = TABDIM(strCube, i);

   IF(SUBSETEXISTS(strDim, strSub) = 0);
      SUBSETCREATE(strDim, strSub);
   ENDIF;
   SUBSETDELETEALLELEMENTS(strDim, strSub);

   VIEWSUBSETASSIGN(strCube, strView, strDim, strSub);


p = 1;
      WHILE(p <= DIMSIZ(strDim));
         strLoopEle = DIMNM(strDim, p);
         IF(ELLEV(strDim, strLoopEle) = 0);
            SUBSETELEMENTINSERT(strDim, strSub, strLoopEle, SUBSETGETSIZE(strDim, strSub) + 1);
         ENDIF;
         p = p + 1;
      END;

   i = i + 1;
END;
VIEWZEROOUT(strCube, strView);
#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****




#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****

strScenario = vScenario;
strCompany = vCompany;
strDept = vDept;
strAcct = vAcct;
strCurrency = vCurrency;
strBook = vBook;
strPeriod = vPeriod;


 IF (DIMIX (strScenarioDim, strScenario) = 0 %
  DIMIX (strCompanyDim, strCompany) = 0 %
  DIMIX( strDeptDim, strDept) = 0 %
  DIMIX (strAcctDim, strAcct) = 0 %
  DIMIX (strCurrencyDim, strCurrency) = 0 %
  DIMIX (strBookDim, strBook) = 0 %
  DIMIX (strPeriodDim, strPeriod) = 0);
     ASCIIOUTPUT(strError, strScenario, strCompany, strDept, strAcct, strCurrency, strBook, strPeriod);
     ITEMSKIP;
ENDIF;



 IF (ELLEV (strScenarioDim, strScenario) = 0 &
      (ELLEV (strCompanyDim, strCompany) = 0) &
      (ELLEV (strDeptDim, strDept) = 0) &
      (ELLEV (strAcctDim, strAcct) = 0) &
      (ELLEV (strCurrencyDim, strCurrency) = 0) &
      (ELLEV (strBookDim, strBook) = 0) &
      (ELLEV (strPeriodDim, strPeriod) = 0));
          CELLINCREMENTN( vValue, strCube, strScenario, strCompany, strDept, strAcct, strCurrency, strBook, strPeriod);
ELSE;
      ITEMSKIP;
ENDIF;

#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion