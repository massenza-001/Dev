#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

# This process will copy Scen to Scen and Period to Period for all cubes that have
# a bpmScenario AND bpmPeriod dimension
# This will allow for the shifting of time for a the BPMS Data
# Act >>>> ACT,  Jan-2014 >>> Jan 2015

strIndex = 'BPMS Copy';
strIndexDim = 'rdmDatamanagerIndex';
strBatchNameDim = 'rdmDatamanagerBatchName';

strRDMCube = 'rdmDatamanagerDetails';
strBatchCube = 'rdmDatamanagerBatch';
strBatchName = 'BPMS Copy';
numBatchCtr = 0;

#========================================
# >>> Zero Out RDM Indexs and Batch
#========================================
strView = 'zzRDMZeroOut';
strSub = strView;

IF (VIEWEXISTS (strRDMCube, strView) = 1);
     VIEWDESTROY (strRDMCube, strView);
ENDIF;

VIEWCREATE (strRDMCube, strView);

IF (SUBSETEXISTS (strIndexDim, strSub) = 0);
     SUBSETCREATE (strIndexDim, strSub);
ENDIF;

SUBSETDELETEALLELEMENTS (strIndexDim, strSub);

SUBSETELEMENTINSERT (strIndexDim, strSub, strIndex, 1);

VIEWSUBSETASSIGN (strRDMCube, strView, strIndexDim, strSub);
VIEWZEROOUT (strRDMCube, strView);

VIEWDESTROY (strRDMCube, strView);
SUBSETDESTROY (strIndexDim, strSub);


#-------------------------------------------------------------------------------------------------------------

IF (VIEWEXISTS (strBatchCube, strView) = 1);
     VIEWDESTROY (strBatchCube, strView);
ENDIF;

VIEWCREATE (strBatchCube, strView);

IF (SUBSETEXISTS (strBatchNameDim, strSub) = 0);
    SUBSETCREATE (strBatchNameDim, strSub);
ENDIF;

SUBSETDELETEALLELEMENTS (strBatchNameDim, strSub);

SUBSETELEMENTINSERT (strBatchNameDim, strSub, strBatchName, 1);

VIEWSUBSETASSIGN (strBatchCube, strView, strBatchNameDim, strSub);
VIEWZEROOUT (strBatchCube, strView);

VIEWDESTROY (strBatchCube, strView);
SUBSETDESTROY (strBatchNameDim, strSub);



#========================================
# >>> Loop Cubes
#========================================


IF (parCube @<> '' & DIMIX ('}Cubes', parCube) = 0);
     PROCESSERROR;

ELSEIF (parCube @= '');
     numCubeCtr = 1;
     numCubeCtrMax = DIMSIZ ('}Cubes');

     WHILE (numCubeCtr <= numCubeCtrMax);
          strCube = DIMNM ('}Cubes', numCubeCtr);

          IF (SUBST (strCube, 1, 1)@<>'}' );

               numDimCtr = 1;

               WHILE (numDimCtr <= 36);
                    strDim = TABDIM (strCube, numDimCtr);

                    IF (strDim @= '');
                         numDimCtr =999;
                    ELSEIF (SCAN ('SCENARIO', UPPER (strDim)) <> 0);
                         strDim = '';
                         strYearDim = '';
                         strScenarioDim = '';
                         strYearFlag = 'N';
                         strScenFlag = 'N';

#========================================
# >>> Pull Dim # for Cubes that contain Scenario or Year
#========================================

                    numDimCtr2 = 1;
                    WHILE (numDimCtr2 <= 36);
                         strDim2 = TABDIM (strCube, numDimCtr2);

                         IF (SCAN ('BPMSCENARIO', UPPER (strDim2)) <> 0);
                              strScenarioDim = 'Dim' | NUMBERTOSTRING (numDimCtr2);
                              strScenFlag = 'Y';
                         ELSEIF (SCAN ('BPMPERIOD', UPPER (strDim2)) <> 0);
                              strYearDim = 'Dim' | NUMBERTOSTRING (numDimCtr2);
                              strYearFlag = 'Y';
                         ENDIF;

                         numDimCtr2 = numDimCtr2 + 1;
                    END;

#========================================
# >>> Setup RDM Index
#========================================

                    IF (strYearFlag @= 'Y' & strScenFlag@='Y');
                         CELLPUTS ('Scenario Copy', strRDMCube, strCube, strIndex, 'Value', 'Comment');

                         strType = 'COPY';

                         CELLPUTS (strType, strRDMCube, strCube, strIndex, 'Value', 'Type');

                         CELLPUTS (parSourceScenario, strRDMCube, strCube, strIndex, strScenarioDim, 'FROM');
                         CELLPUTS (parTargetScenario, strRDMCube, strCube, strIndex, strScenarioDim, 'TO');

                         CELLPUTS (parSourceYear, strRDMCube, strCube, strIndex, strYearDim, 'FROM');
                         CELLPUTS (parTargetYear, strRDMCube, strCube, strIndex, strYearDim, 'TO');

#========================================
# >>> Setup RDM Batch
#========================================

                         numBatchCtr = numBatchCtr + 1;
                         strBatchIndex = 'Batch ' | NUMBERTOSTRING (numBatchCtr);

                         CELLPUTS (strCube, strBatchCube, strBatchName, strBatchIndex, 'CUBE');
                         CELLPUTS (strIndex, strBatchCube, strBatchName, strBatchIndex, 'INDEX');
                         CELLPUTS ('Y', strBatchCube, strBatchName, strBatchIndex, 'RUN');
                         CELLPUTS (strBatchName, strBatchCube, strBatchName, strBatchIndex, 'COMMENT');

                    ENDIF;
               ENDIF;

               numDimCtr = numDimCtr + 1;

          END;

          ENDIF;

          numCubeCtr = numCubeCtr + 1;

     END;

#========================================
# >>> Setup For Only Single Cube
#========================================

ELSE;

     strCube = parCube;

     numDimCtr = 1;

     WHILE (numDimCtr <= 36);
          strDim = TABDIM (strCube, numDimCtr);
               IF (strDim @= '');
                    numDimCtr =999;

               ELSEIF (SCAN ('SCENARIO', UPPER (strDim)) <> 0);
                    strDim = '';
                    strYearDim = '';
                    strScenarioDim = '';
                    strYearFlag = 'N';
                    strScenFlag = 'N';

#========================================
# >>> Pull Dim # for Cubes that contain Scenario or Year
#========================================
               numDimCtr2 = 1;
               WHILE (numDimCtr2 <= 36);
                    strDim2 = TABDIM (strCube, numDimCtr2);

                    IF (SCAN ('BPMSCENARIO', UPPER (strDim2)) <> 0);
                         strScenarioDim = 'Dim' | NUMBERTOSTRING (numDimCtr2);
                         strScenFlag = 'Y';
                    ELSEIF (SCAN ('BPMPERIOD', UPPER (strDim2)) <> 0);
                         strYearDim = 'Dim' | NUMBERTOSTRING (numDimCtr2);
                         strYearFlag = 'Y';
                    ENDIF;

                    numDimCtr2 = numDimCtr2 + 1;
               END;

#========================================
# >>> Setup RDM Index
#========================================
               IF (strYearFlag @= 'Y' & strScenFlag@='Y');
                    CELLPUTS ('Scenario Copy', strRDMCube, strCube, strIndex, 'Value', 'Comment');
                    CELLPUTS ('COPY', strRDMCube, strCube, strIndex, 'Value', 'Type');

                    CELLPUTS (parSourceScenario, strRDMCube, strCube, strIndex, strScenarioDim, 'FROM');
                    CELLPUTS (parTargetScenario, strRDMCube, strCube, strIndex, strScenarioDim, 'TO');

                    CELLPUTS (parSourceYear, strRDMCube, strCube, strIndex, strYearDim, 'FROM');
                    CELLPUTS (parTargetYear, strRDMCube, strCube, strIndex, strYearDim, 'TO');

#========================================
# >>> Setup RDM Batch
#========================================
                    numBatchCtr = numBatchCtr + 1;
                    strBatchIndex = 'Batch ' | NUMBERTOSTRING (numBatchCtr);

                    CELLPUTS (strCube, strBatchCube, strBatchName, strBatchIndex, 'CUBE');
                    CELLPUTS (strIndex, strBatchCube, strBatchName, strBatchIndex, 'INDEX');
                    CELLPUTS ('Y', strBatchCube, strBatchName, strBatchIndex, 'RUN');
                    CELLPUTS (strBatchName, strBatchCube, strBatchName, strBatchIndex, 'COMMENT');
               ENDIF;

          ENDIF;

          numDimCtr = numDimCtr + 1;

     END;


ENDIF;

#========================================
# >>> Run RDM Batch
#========================================

 EXECUTEPROCESS ('Datamanager - Batch Call', 'pBatchName', strBatchName);

#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion