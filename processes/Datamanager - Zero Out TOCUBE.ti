#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

#===================================
# Build View
#===================================

strCubeName = CELLGETS( 'rdmDatamanagerDetails', pCube, pIndex, 'VALUE', 'To Cube');

strView = 'zzDataManager';

IF ( VIEWEXISTS ( strCubeName, strView) =1);
     VIEWDESTROY ( strCubeName, strView);
ENDIF;

VIEWCREATE ( strCubeName ,strView);
#VIEWSETSKIPCALCS(strCubeName, strView, 0 );



#===================================
# Process dims and create subsets while looping through the Finance cube
#===================================

intLoop = 32;
intDIMCTR = 1;
strSubSet = strView;
strCube = pCube;


intZero = 0;

WHILE ( intDIMCTR <= intLoop );

      strDimValue = 'Dim ' | NUMBERTOSTRING ( intDIMCTR);
      strIndex = pIndex;

     strDimension = TABDIM (strCubeName, intDIMCTR);

     strChkType = SUBST ( CELLGETS( 'rdmDatamanagerDetails', strCube, strIndex, strDimValue, 'To Cube'), 1, 3);
     strVal = CELLGETS( 'rdmDatamanagerDetails', strCube, strIndex, strDimValue, 'To Cube');

    IF ( strChkType @='Dim');

           strCheckElem = CELLGETS( 'rdmDatamanagerDetails', strCube, strIndex, 'Dim ' | SUBST ( strVal, 5, 1), 'FROM');

    ELSEIF ( strChkType @='ATT');

     strATTType = SUBST ( strVal, 1, 5);
     strATTDim = CELLGETS( 'rdmDatamanagerDetails', strCube, strIndex, 'Dim ' | SUBST ( strVal, 11, 1) , 'Dim Name');
     strATTDimVal = CELLGETS( 'rdmDatamanagerDetails', strCube, strIndex, 'Dim ' | SUBST(strVal, 11,1), 'FROM');
     strATTMsr = TRIM ( SUBST ( strVal, 13, 1000) );

     IF ( strATTType @='ATTRS');
          strCheckElem = ATTRS ( strATTDim, strATTDimVal , strATTMsr);
     ENDIF;

     IF ( strATTType @='ATTRN');
          strCheckElem = NUMBERTOSTRING ( ATTRN ( strATTDim, strATTDimVal , strATTMsr));
     ENDIF;
  
   ELSE;

      strCheckElem = CELLGETS( 'rdmDatamanagerDetails', strCube, strIndex, strDimValue, 'To Cube');

  ENDIF;

        
         IF ( strCheckElem @<>'');
               intCheckElem = DIMIX ( strDimension, strCheckElem);
        ENDIF;


        strCheckType = DTYPE ( strDimension, strCheckElem);

     
#==========================
# Checking out of Loop
#==========================

   IF ( strDimension @='');
        intDIMCTR = intLoop;
   ENDIF;


  IF( strDimension @<>'' & strCheckElem @<>'' & intCheckElem <>0);


      
      IF( SUBSETEXISTS (strDimension, strSubSet) = 1);
            SUBSETDELETEALLELEMENTS (strDimension, strSubSet);
      ELSE;
          SUBSETCREATE (strDimension, strSubSet);
     ENDIF;


     IF( strCheckType@='C');
          IF( ELLEV( strDimension, strCheckElem)=0 );
               SUBSETELEMENTINSERT(strDimension, strSubset,strCheckElem,1);
          ELSE;
               intSize = DIMSIZ( strDimension );
               intCtr = 1;
               WHILE( intCtr <= intSize );
                    strElem = DIMNM( strDimension, intCtr );
                    IF( ELISANC( strDimension, strCheckElem, strElem )<>0 & ELLEV( strDimension, strElem )=0 );
                         SUBSETELEMENTINSERT(strDimension, strSubset, strElem,1);
                    ENDIF;
                    intCtr = intCtr + 1;
               END;
          ENDIF;
     ELSE;
          SUBSETELEMENTINSERT(strDimension, strSubset,strCheckElem,1);
     ENDIF;
     VIEWSUBSETASSIGN(strCubeName, strView, strDimension, strSubset);



intZero = 1;


ENDIF;

intDIMCTR = intDIMCTR + 1;
END;


IF ( intZero =1);
     VIEWZEROOUT ( strCubeName, strView);
#     ASCIIOUTPUT ( 'ZeroOut.log', 'DATA ZEROED OUT');
ENDIF;











#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****





#endregion