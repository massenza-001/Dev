#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****


#=============================================================================================
# Author: Lee Lazarow
# Purpose: This process populates the counter for blank account mapping fields
#=============================================================================================


#==========================================
# DEFINE VARIABLES
#==========================================
strCub = pCube;


#==========================================
# ZERO OUT EXISTING COUNTS
#==========================================

#-------------------------------------------------------
#>>> CREATE VIEW FOR ZEROOUT
#-------------------------------------------------------
strView = 'zzClearCount';
strSub = strView;

IF (VIEWEXISTS (strCub, strView) = 1);
    VIEWDESTROY (strCub, strView);
ENDIF;
VIEWCREATE (strCub, strView);


#-------------------------------------------------------
#>>> CREATE ZEROOUT SUBSET IN MSR DIMENSION
#-------------------------------------------------------
strDim = 'Mapped_msr';
strElement = 'Count';

IF (SUBSETEXISTS (strDim, strSub) = 0);
    SUBSETCREATE (strDim, strSub);
ENDIF;

SUBSETDELETEALLELEMENTS (strDim, strSub);
SUBSETELEMENTINSERT (strDim, strSub, strElement, 1);
VIEWSUBSETASSIGN (strCub, strView, strDim, strSub);



#-------------------------------------------------------
#>>> PERFORM THE ZERO OUT AND DELETE VIEW
#-------------------------------------------------------
VIEWZEROOUT (strCub, strView);
VIEWDESTROY (strCub, strView);




#==========================================
# CREATE NEW SOURCE VIEW
#==========================================
strView = 'zzPopulateCount';
strSub = strView;

IF (VIEWEXISTS (strCub, strView) = 1);
    VIEWDESTROY (strCub, strView);
ENDIF;
VIEWCREATE (strCub, strView);


#-------------------------------------------------------
#>>> CREATE SOURCE SUBSET IN MSR DIMENSION
#-------------------------------------------------------
strDim = 'Mapped_msr';
strElement = 'MapValue';

IF (SUBSETEXISTS (strDim, strSub) = 0);
    SUBSETCREATE (strDim, strSub);
ENDIF;

SUBSETDELETEALLELEMENTS (strDim, strSub);
SUBSETELEMENTINSERT (strDim, strSub, strElement, 1);
VIEWSUBSETASSIGN (strCub, strView, strDim, strSub);


#-------------------------------------------------------
# SKIP CONSOLS, DO NOT SKIP ZEROS
#-------------------------------------------------------
ViewExtractSkipZeroesSet (strCub, strView, 0);
ViewExtractSkipCalcsSet (strCub, strView, 1);


#-------------------------------------------------------
# REDEFINE SOURCE VIEW
#-------------------------------------------------------
DATASOURCECUBEVIEW = strView;

#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****


# POPULATE THE COUNTER IF THE MAPPING VALUE IS BLANK
IF ( vValue @= '');
     CELLPUTN ( 1, strCub, vAccount, 'Count');
ENDIF;



#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****


#==========================================
# CLEANUP
#==========================================
VIEWDESTROY (strCub, strView);
SUBSETDESTROY ('Mapped_msr', strSub);

#endregion