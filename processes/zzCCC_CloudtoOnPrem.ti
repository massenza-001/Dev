#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

#=================================
# >>> Define Global Variables
#=================================

strProcessName = GETPROCESSNAME();
strCube = 'sgTestSQL';

strView = strProcessName;
strSub = strView;

strLogPath =  '..\..\..\prod\PTR01-AA\Logs\';


strDataSourceFilePath = '..\..\..\prod\PTR01-AA\Transfer\';
strFile = strView  | '.txt';


strErrorFile = strProcessName | '_' | TIMST(NOW, '\Y\m\d at \H\p \imin\ssec') | '.csv';
strError = strLogPath | strErrorFile;


### Cube Dimensions ########
strScenarioDim = 'bpmScenario';
strCompanyDim = 'bpmCompany';
strDeptDim = 'bpmDepartment';
strAcctDim = 'bpmAccount';
strCurrencyDim = 'bpmCurrency';
strBookDim = 'bpmBook';
strPeriodDim = 'bpmPeriod';

# =====================================================
# >>> CREATE View - Test cube
# =====================================================


IF(VIEWEXISTS(strCube, strView) = 1);
   VIEWDESTROY(strCube, strView);
ENDIF;
VIEWCREATE(strCube, strView);

VIEWEXTRACTSKIPCALCSSET(strCube, strView, 1);
VIEWEXTRACTSKIPRULEVALUESSET(strCube, strView, 1);
VIEWEXTRACTSKIPZEROESSET(strCube, strView, 1);

i = 1;
WHILE(TABDIM(strCube, i) @<> '');
   strDim = TABDIM(strCube, i);

   IF(SUBSETEXISTS(strDim, strSub) = 0);
      SUBSETCREATE(strDim, strSub);
   ENDIF;
   SUBSETDELETEALLELEMENTS(strDim, strSub);

   VIEWSUBSETASSIGN(strCube, strView, strDim, strSub);


p = 1;
      WHILE(p <= DIMSIZ(strDim));
         strLoopEle = DIMNM(strDim, p);
         IF(ELLEV(strDim, strLoopEle) = 0);
            SUBSETELEMENTINSERT(strDim, strSub, strLoopEle, SUBSETGETSIZE(strDim, strSub) + 1);
         ENDIF;
         p = p + 1;
      END;

   i = i + 1;
END;

DATASOURCETYPE = 'VIEW';
DATASOURCENAMEFORSERVER = strCube;
DATASOURCECUBEVIEW = strView;

#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****

strValue = NUMBERTOSTRING(vValue);
ASCIIOUTPUT(strDataSourceFilePath | strFile, vScenario, vCompany, vDept, vAcct, vCurrency, vBook, vPeriod, strValue);
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion